{"version":3,"sources":["../node_modules/react-transition-group/CSSTransition.js","../node_modules/react-transition-group/Transition.js","../node_modules/react-transition-group/utils/PropTypes.js","../node_modules/dom-helpers/class/addClass.js","../node_modules/dom-helpers/node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/dom-helpers/class/hasClass.js","../node_modules/dom-helpers/class/removeClass.js"],"names":["exports","__esModule","default","obj","newObj","key","Object","prototype","hasOwnProperty","call","desc","defineProperty","getOwnPropertyDescriptor","get","set","_interopRequireWildcard","__webpack_require__","_addClass","_interopRequireDefault","_removeClass","_react","_Transition","_extends","assign","target","i","arguments","length","source","apply","this","addClass","node","classes","split","forEach","c","removeClass","CSSTransition","_React$Component","subClass","superClass","_this","_len","args","Array","_key","concat","onEnter","appearing","className","getClassNames","removeClasses","props","onEntering","activeClassName","reflowAndAddClass","onEntered","appearClassName","doneClassName","enterClassName","onExit","onExiting","onExited","type","classNames","isStringClassNames","create","constructor","__proto__","_proto","_this$getClassNames6","scrollTop","render","createElement","Component","defaultProps","propTypes","_default","module","EXITING","ENTERED","ENTERING","EXITED","UNMOUNTED","PropTypes","_reactDom","_reactLifecyclesCompat","Transition","context","initialStatus","parentGroup","transitionGroup","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getChildContext","getDerivedStateFromProps","_ref","prevState","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","undefined","mounting","findDOMNode","performEnter","performExit","setState","_this2","timeouts","enterTimeout","safeSetState","onTransitionEnd","_this3","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","_this$props","children","childProps","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","child","Children","only","cloneElement","noop","contextTypes","object","childContextTypes","polyfill","classNamesShape","timeoutsShape","element","classList","add","_hasClass","setAttribute","baseVal","contains","replaceClassName","origClass","classToRemove","replace","RegExp","remove"],"mappings":"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","file":"static/js/3.b410a05a.chunk.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _addClass = _interopRequireDefault(require(\"dom-helpers/class/addClass\"));\n\nvar _removeClass = _interopRequireDefault(require(\"dom-helpers/class/removeClass\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass.default)(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass.default)(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](http://www.nganimate.org/) library, you should use it if you're\n * using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity: 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**.\n */\n\n\nvar CSSTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.onEnter = function (node, appearing) {\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          className = _this$getClassNames.className;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, className);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node, appearing);\n      }\n    };\n\n    _this.onEntering = function (node, appearing) {\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          activeClassName = _this$getClassNames2.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node, appearing);\n      }\n    };\n\n    _this.onEntered = function (node, appearing) {\n      var appearClassName = _this.getClassNames('appear').doneClassName;\n\n      var enterClassName = _this.getClassNames('enter').doneClassName;\n\n      var doneClassName = appearing ? appearClassName + \" \" + enterClassName : enterClassName;\n\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node, appearing);\n      }\n    };\n\n    _this.onExit = function (node) {\n      var _this$getClassNames3 = _this.getClassNames('exit'),\n          className = _this$getClassNames3.className;\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      addClass(node, className);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.onExiting = function (node) {\n      var _this$getClassNames4 = _this.getClassNames('exit'),\n          activeClassName = _this$getClassNames4.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.onExited = function (node) {\n      var _this$getClassNames5 = _this.getClassNames('exit'),\n          doneClassName = _this$getClassNames5.doneClassName;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + '-' : '';\n      var className = isStringClassNames ? prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? className + '-active' : classNames[type + 'Active'];\n      var doneClassName = isStringClassNames ? className + '-done' : classNames[type + 'Done'];\n      return {\n        className: className,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$getClassNames6 = this.getClassNames(type),\n        className = _this$getClassNames6.className,\n        activeClassName = _this$getClassNames6.activeClassName,\n        doneClassName = _this$getClassNames6.doneClassName;\n\n    className && removeClass(node, className);\n    activeClassName && removeClass(node, activeClassName);\n    doneClassName && removeClass(node, doneClassName);\n  };\n\n  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {\n    // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n    if (className) {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n      /* eslint-enable no-unused-expressions */\n\n      addClass(node, className);\n    }\n  };\n\n  _proto.render = function render() {\n    var props = _extends({}, this.props);\n\n    delete props.classNames;\n    return _react.default.createElement(_Transition.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react.default.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, _Transition.default.propTypes, {\n  /**\n   * The animation classNames applied to the component as it enters, exits or\n   * has finished the transition. A single name can be provided and it will be\n   * suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`,\n   * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,\n   * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.\n   *\n   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.\n   * This allows you to define different behavior for when appearing is done and\n   * when regular entering is done, using selectors like\n   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an\n   * epic entrance animation when element first appears in the DOM using\n   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   * simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nvar _default = CSSTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.EXITING = exports.ENTERED = exports.ENTERING = exports.EXITED = exports.UNMOUNTED = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar UNMOUNTED = 'unmounted';\nexports.UNMOUNTED = UNMOUNTED;\nvar EXITED = 'exited';\nexports.EXITED = EXITED;\nvar ENTERING = 'entering';\nexports.ENTERING = ENTERING;\nvar ENTERED = 'entered';\nexports.ENTERED = ENTERED;\nvar EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 0 },\n *   entered:  { opacity: 1 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nexports.EXITING = EXITING;\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context.transitionGroup; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  var _proto = Transition.prototype;\n\n  _proto.getChildContext = function getChildContext() {\n    return {\n      transitionGroup: null // allows for nested Transitions\n\n    };\n  };\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      var node = _reactDom.default.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context.transitionGroup ? this.context.transitionGroup.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      _this2.onTransitionEnd(node, enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      this.props.addEndListener(node, this.nextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps.in;\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      return children(status, childProps);\n    }\n\n    var child = _react.default.Children.only(children);\n\n    return _react.default.cloneElement(child, childProps);\n  };\n\n  return Transition;\n}(_react.default.Component);\n\nTransition.contextTypes = {\n  transitionGroup: PropTypes.object\n};\nTransition.childContextTypes = {\n  transitionGroup: function transitionGroup() {}\n};\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`, `'unmounted'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the `<Transition>` component mounts.\n   * If you want to transition on the first mount set `appear` to `true`, and the\n   * component will transition in as soon as the `<Transition>` mounts.\n   *\n   * > Note: there are no specific \"appear\" states. `appear` only adds an additional `enter` transition.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = _PropTypes.timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\n\nvar _default = (0, _reactLifecyclesCompat.polyfill)(Transition);\n\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.classNamesShape = exports.timeoutsShape = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar timeoutsShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.shape({\n  enter: _propTypes.default.number,\n  exit: _propTypes.default.number,\n  appear: _propTypes.default.number\n}).isRequired]) : null;\nexports.timeoutsShape = timeoutsShape;\nvar classNamesShape = process.env.NODE_ENV !== 'production' ? _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  active: _propTypes.default.string\n}), _propTypes.default.shape({\n  enter: _propTypes.default.string,\n  enterDone: _propTypes.default.string,\n  enterActive: _propTypes.default.string,\n  exit: _propTypes.default.string,\n  exitDone: _propTypes.default.string,\n  exitActive: _propTypes.default.string\n})]) : null;\nexports.classNamesShape = classNamesShape;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = addClass;\n\nvar _hasClass = _interopRequireDefault(require(\"./hasClass\"));\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n}\n\nmodule.exports = exports[\"default\"];","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = hasClass;\n\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n};"],"sourceRoot":""}