{"version":3,"sources":["Components/TextHead.js","Components/Main.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Components/Pagination/Pagination.js","Page/Page-Question.js"],"names":["__webpack_require__","d","__webpack_exports__","TextLine","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_ref2","title","request","a","createElement","className","style","color","TextHead","_ref","Main","children","_toConsumableArray","arr","Array","isArray","i","arr2","length","_arrayWithoutHoles","iter","Symbol","iterator","Object","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","LEFT_PAGE","RIGHT_PAGE","range","to","step","arguments","undefined","push","Pagination","props","_this","F_Working_ProjectSoft_dumrongtumweb_Copy_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","F_Working_ProjectSoft_dumrongtumweb_Copy_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","F_Working_ProjectSoft_dumrongtumweb_Copy_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","gotoPage","page","_this$props$onPageCha","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","state","pageNeighbours","handleMoveRight","prevPage","nextPage","fetchPageNumbers","console","log","totalNumbers","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","extraPages","concat","F_Working_ProjectSoft_dumrongtumweb_Copy_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","_props$totalRecords","_props$pageLimit","_props$pageNeighbours","ceil","_this2","react__WEBPACK_IMPORTED_MODULE_6___default","react__WEBPACK_IMPORTED_MODULE_6__","aria-label","map","index","key","onClick","href","Component","PageQuestion","F_Working_ProjectSoft_dumrongtumweb_Copy_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","F_Working_ProjectSoft_dumrongtumweb_Copy_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","F_Working_ProjectSoft_dumrongtumweb_Copy_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","componentDidMount","_fetchQuestion","F_Working_ProjectSoft_dumrongtumweb_Copy_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","F_Working_ProjectSoft_dumrongtumweb_Copy_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","accordion","wrap","_context","prev","next","get","sent","accordionItems","el","F_Working_ProjectSoft_dumrongtumweb_Copy_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","open","oldSolution","currentAccordionItems","t0","error","message","stop","searchQnA","e","value","target","newsolution","filter","includes","detail","click","newAccordion","slice","indexOf","data","renderQnA","react__WEBPACK_IMPORTED_MODULE_8___default","solution_id","bind","src","Images","Asset39","alt","_this$state","totalAccordionItems","dataLength","_Components_Main__WEBPACK_IMPORTED_MODULE_10__","_Components_TextHead__WEBPACK_IMPORTED_MODULE_9__","type","placeholder","width","onChange","Asset21","_Components_Pagination_Pagination__WEBPACK_IMPORTED_MODULE_13__"],"mappings":"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","file":"static/js/21.5eda3d9c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TextHead = ({ title }) => (\r\n    <h2 className='Text-Head' >{title}</h2>\r\n)\r\nexport default TextHead\r\n\r\n\r\nexport function TextLine({ title, request }) {\r\n    return (\r\n        <div className='-text-line'>\r\n            <p style={{ color: request ? '#29a4db' : '' }}>{title}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nconst Main = ({ children }) => (\r\n    <div className='main-panel'>\r\n        <div className='main-width'>\r\n            {children}\r\n        </div>\r\n    </div>\r\n)\r\nexport default Main","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LEFT_PAGE = 'LEFT';\r\nconst RIGHT_PAGE = 'RIGHT';\r\nconst PREV_PAGE = 'PREV';\r\nconst NEXT_PAGE = 'NEXT';\r\n\r\n/**\r\n * Helper method for creating a range of numbers\r\n * range(1, 5) => [1, 2, 3, 4, 5]\r\n */\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n}\r\n\r\nclass Pagination extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const { totalRecords = null, pageLimit = 30, pageNeighbours = 0 } = props;\r\n\r\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 30;\r\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\r\n    this.pageNeighbours = typeof pageNeighbours === 'number'\r\n      ? Math.max(0, Math.min(pageNeighbours, 2))\r\n      : 0;\r\n\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\r\n\r\n    this.state = { currentPage: 1 };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.gotoPage(1);\r\n  }\r\n\r\n  gotoPage = page => {\r\n    const { onPageChanged = f => f } = this.props;\r\n\r\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\r\n\r\n    const paginationData = {\r\n      currentPage,\r\n      totalPages: this.totalPages,\r\n      pageLimit: this.pageLimit,\r\n      totalRecords: this.totalRecords\r\n    };\r\n\r\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\r\n  }\r\n\r\n  handleClick = page => evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(page);\r\n  }\r\n\r\n  handleMoveLeft = evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\r\n  }\r\n\r\n  handleMoveRight = evt => {\r\n    evt.preventDefault();\r\n    this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\r\n  }\r\n  prevPage = evt => {\r\n    let page = this.state.currentPage - 1;\r\n    if (this.state.currentPage !== 1) {\r\n      this.setState({ currentPage: page });\r\n      this.gotoPage(page);\r\n    } else {\r\n      // page 1\r\n    }\r\n  }\r\n\r\n  nextPage = evt => {\r\n    let page = this.state.currentPage + 1;\r\n    this.setState({ currentPage: page });\r\n    this.gotoPage(page);\r\n  }\r\n\r\n  /**\r\n   * Let's say we have 10 pages and we set pageNeighbours to 2\r\n   * Given that the current page is 6\r\n   * The pagination control will look like the following:\r\n   *\r\n   * (1) < {4 5} [6] {7 8} > (10)\r\n   *\r\n   * (x) => terminal pages: first and last page(always visible)\r\n   * [x] => represents current page\r\n   * {...x} => represents page neighbours\r\n   */\r\n  fetchPageNumbers = () => {\r\n\r\n    const totalPages = this.totalPages;\r\n    const currentPage = this.state.currentPage;\r\n    const pageNeighbours = this.pageNeighbours;\r\n    console.log('pageNeighbours', pageNeighbours)\r\n    /**\r\n     * totalNumbers: the total page numbers to show on the control\r\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\r\n     */\r\n    const totalNumbers = (this.pageNeighbours * 2) + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n\r\n      const startPage = Math.max(2, currentPage - pageNeighbours);\r\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours + 1);\r\n\r\n      let pages = range(startPage, endPage);\r\n\r\n      /**\r\n       * hasLeftSpill: has hidden pages to the left\r\n       * hasRightSpill: has hidden pages to the right\r\n       * spillOffset: number of hidden pages either to the left or to the right\r\n       */\r\n      const hasLeftSpill = startPage > 2;\r\n      const hasRightSpill = (totalPages - endPage) > 1;\r\n      const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n      switch (true) {\r\n        // handle: (1) < {5 6} [7] {8 9} (10)\r\n        case (hasLeftSpill && !hasRightSpill): {\r\n          const extraPages = range(startPage - spillOffset, startPage - 1);\r\n          pages = [LEFT_PAGE, ...extraPages, ...pages, totalPages];\r\n          break;\r\n        }\r\n\r\n        // handle: (1) {2 3} [4] {5 6} > (10)\r\n        case (!hasLeftSpill && hasRightSpill): {\r\n          const extraPages = range(endPage + 1, endPage + spillOffset);\r\n          pages = [1, ...pages, ...extraPages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n\r\n        // handle: (1) < {4 5} [6] {7 8} > (10)\r\n        case (hasLeftSpill && hasRightSpill):\r\n        default: {\r\n          const extraPages = range(1, 9);\r\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n      }\r\n\r\n      // return [1, ...pages, totalPages];\r\n      return [...pages];\r\n\r\n    }\r\n\r\n    return range(1, totalPages);\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    if (!this.totalRecords) return null;\r\n\r\n    this.totalRecords = this.props.totalRecords\r\n    this.pageLimit = this.props.pageLimit\r\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit)\r\n\r\n    const { currentPage } = this.state;\r\n    const pages = this.fetchPageNumbers();\r\n\r\n    return (\r\n      <Fragment>\r\n        <nav aria-label=\"Countries Pagination\">\r\n          <ul className=\"pagination\">\r\n            {pages.map((page, index) => {\r\n\r\n              if (page === LEFT_PAGE) return (\r\n                <li key={index} className=\"\">\r\n                  {/* <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}> */}\r\n                  <i className=\"fas fa-chevron-left pagination-prev-page\" onClick={this.handleMoveLeft}></i>\r\n                  {/* <span className=\"sr-only\">Previous</span> */}\r\n                  {/* </a> */}\r\n                </li>\r\n              );\r\n\r\n              if (page === RIGHT_PAGE) return (\r\n                <li key={index} className=\"pagination-prev-page\">\r\n                  {/* <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}> */}\r\n                  <i className=\"fas fa-chevron-right pagination-next-page\" onClick={this.handleMoveRight}></i>\r\n                  {/* <span className=\"sr-only\">Next</span> */}\r\n                  {/* </a> */}\r\n                </li>\r\n              );\r\n\r\n              return (\r\n                <li key={index} className={`page-item ${currentPage === page ? ' active' : ''}`}>\r\n                  <a className=\"page-link\" href=\"#\" onClick={this.handleClick(page)}>{page}</a>\r\n                </li>\r\n              );\r\n\r\n            })}\r\n          </ul>\r\n        </nav>\r\n      </Fragment>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  totalRecords: PropTypes.number.isRequired,\r\n  pageLimit: PropTypes.number,\r\n  pageNeighbours: PropTypes.number,\r\n  onPageChanged: PropTypes.func\r\n};\r\n\r\nexport default Pagination;","import React, { Component } from 'react'\r\nimport TextHead from '../Components/TextHead'\r\nimport Main from '../Components/Main'\r\nimport Images from '../Components/Images'\r\nimport { get } from '../api';\r\nimport Pagination from '../Components/Pagination/Pagination';\r\nexport default class PageQuestion extends Component {\r\n    // -----------------------------------------------------\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            accordionItems: [],\r\n            oldSolution: [],\r\n            currentAccordionItems: [],\r\n            currentPage: 1,\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount = () => {\r\n        this._fetchQuestion()\r\n    }\r\n\r\n    _fetchQuestion = async () => {\r\n        try {\r\n            const accordion = await get('/solution')\r\n            this.setState({\r\n                accordionItems: accordion.map(el => ({ ...el, open: false })),\r\n                oldSolution: accordion.map(el => ({ ...el, open: false })),\r\n                currentAccordionItems: accordion\r\n            })\r\n        } catch (error) {\r\n            console.error(error.message)\r\n        }\r\n    }\r\n\r\n    searchQnA = (e) => {\r\n        const value = e.target.value\r\n        if (value !== '') {\r\n            let newsolution = this.state.accordionItems.filter(el => {\r\n                return (\r\n                    el.title.includes(value) || el.detail.includes(value)\r\n                )\r\n            })\r\n            this.setState(prev => ({ accordionItems: prev.oldSolution }))\r\n            this.setState({ accordionItems: newsolution })\r\n        } else {\r\n            this.setState(prev => ({ accordionItems: prev.oldSolution }))\r\n        }\r\n    }\r\n\r\n\r\n    click = (i) => {\r\n        let newAccordion = this.state.accordionItems.slice();\r\n        const index = newAccordion.indexOf(i)\r\n\r\n        newAccordion = newAccordion.map(el => ({ ...el, open: false }));\r\n        newAccordion[index].open = !newAccordion[index].open;\r\n        this.setState({ accordionItems: newAccordion });\r\n    }\r\n    // -------------------------------------------------\r\n    // #################################################################################################\r\n    // ######################################## pagination #############################################\r\n    // #################################################################################################\r\n    onPageChanged = data => {\r\n        let { currentPage } = data;\r\n        this.setState({ currentPage })\r\n    }\r\n    // ################################### ########### ##################################################\r\n\r\n    render() {\r\n        const { currentAccordionItems, currentPage } = this.state;\r\n        const totalAccordionItems = currentAccordionItems.length;\r\n        const pageLimit = 10;\r\n        let dataLength = this.state.accordionItems.length;\r\n        if (totalAccordionItems === 0) return null;\r\n        return (\r\n            <Main>\r\n                <TextHead title='แนวทางแก้ทุกข์' />\r\n                <div className='search-input mt-5 justify-content-start' >\r\n                    <input type='text' placeholder='ค้นหา' className='searchInput' style={{ width: '50%' }} onChange={this.searchQnA} />\r\n                    <button>\r\n                        <img src={Images.Asset21} alt='' />\r\n                    </button>\r\n                </div>\r\n                <div className='setminHeight' >\r\n                    <div className=\"-q-accordion\">\r\n                        {this.renderQnA(currentPage, pageLimit)}\r\n                        <div className=\"d-flex flex-row col-md-6 py-4 justify-content-center align-items-center\">\r\n                            <Pagination totalRecords={dataLength} pageLimit={pageLimit} pageNeighbours={1} onPageChanged={this.onPageChanged} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Main>\r\n        )\r\n    }\r\n\r\n    renderQnA = (currentPage, pageLimit) => {\r\n        let data = this.state.accordionItems.slice((currentPage - 1) * pageLimit, currentPage * pageLimit)\r\n        return this.state.accordionItems && data.map((el, i) => {\r\n            return (\r\n                <div key={el.solution_id}>\r\n                    <div className=\"-q-title\" onClick={this.click.bind(null, el)} >\r\n                        {/* <div className=\"-q-title\" onClick={this.renderQnAdetail(el.solution_id)} > */}\r\n                        <div className=\"arrow-wrapper\">\r\n                            <i className={el.open ? \"fa fa-angle-right\" : \"fa fa-angle-right fa-rotate-180\"} ></i>\r\n                        </div>\r\n                        <img src={Images.Asset39} alt='' />\r\n                        <span className=\"-q-title-text\">\r\n                            {el.title}\r\n                        </span>\r\n                    </div>\r\n                    <div className={el.open ? \"-q-content -q-content-open\" : \"-q-content\"} >\r\n                        <div className={el.open ? \"-q-content-text -q-content-text-open\" : \"-q-content-text\"} >\r\n                            <img src={Images.Asset39} alt='' />\r\n                            <span className=\"-q-title-text ml-3\">\r\n                                {el.title}\r\n                            </span>\r\n                            <div>\r\n                                <span className=\"-q-detail\">\r\n                                    {el.detail}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n}"],"sourceRoot":""}